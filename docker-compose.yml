name: costwatch

services:
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - '8123:8123'
      - '9000:9000'
    environment:
      - CLICKHOUSE_PASSWORD=password
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://127.0.0.1:8123/ping >/dev/null 2>&1 || exit 1']
      interval: 30s
      start_interval: 5s
      start_period: 30s
      timeout: 5s
      retries: 3

  seed:
    build:
      context: .
      dockerfile: docker/go.Dockerfile
    working_dir: /app
    command: sh -c "go run ./cmd/admin/admin.go seed-clickhouse"
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PASSWORD=password
    depends_on:
      clickhouse:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: docker/go.Dockerfile
    working_dir: /app
    command: sh -c "go run ./apps/api/cmd/main.go"
    environment:
      - APP_ENV=development
      - PORT=3010
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PASSWORD=password
      - AWS_PROFILE=${AWS_PROFILE}
      - AWS_REGION=${AWS_REGION}
    env_file:
      - .env
    volumes:
      - ${HOME}/.aws:/root/.aws:ro
    ports:
      - '3010:3010'
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://127.0.0.1:3010/v1/healthcheck >/dev/null 2>&1 || exit 1']
      interval: 10s
      start_interval: 2s
      start_period: 30s
      timeout: 3s
      retries: 5
    depends_on:
      clickhouse:
        condition: service_healthy
      seed:
        condition: service_completed_successfully

  worker:
    build:
      context: .
      dockerfile: docker/go.Dockerfile
    working_dir: /app
    command: sh -c "go run ./apps/worker/cmd/main.go"
    environment:
      - APP_ENV=development
      - PORT=3020
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PASSWORD=password
      - AWS_PROFILE=${AWS_PROFILE}
      - AWS_REGION=${AWS_REGION}
    env_file:
      - .env
    volumes:
      - ${HOME}/.aws:/root/.aws
    ports:
      - '3020:3020'
    depends_on:
      clickhouse:
        condition: service_healthy
      seed:
        condition: service_completed_successfully

  dashboard:
    build:
      context: .
      dockerfile: docker/node.Dockerfile
    working_dir: /app/apps/dashboard
    command: sh -c "yarn vite"
    ports:
      - '3000:3000'
      - '24678:24678'
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://127.0.0.1:3000/ >/dev/null 2>&1 || exit 1']
      interval: 10s
      start_interval: 2s
      start_period: 60s
      timeout: 3s
      retries: 5
    depends_on:
      api:
        condition: service_healthy

